/* COMB(lsft,     KC_LSFT,         KC_A, KC_S) */
/* COMB(rsft,     KC_RSFT,         KC_L, KC_SCLN) */

// navigation
COMB(bspc,     KC_BSPC,         KC_S, KC_D)
COMB(del,      KC_DEL,          KC_D, KC_F)
COMB(esc,      KC_ESC,          KC_J, KC_K)
COMB(ent,      KC_ENT,          KC_K, KC_L)
COMB(pgup,     KC_PGUP,         KC_9, KC_0)
COMB(pgdn,     KC_PGDN,         KC_O, KC_P)
COMB(pghome,   KC_HOME,         KC_I, KC_O, KC_P)
COMB(pgend,    KC_END,          KC_O, KC_P, KC_BSLS)
/* COMB(up,       KC_UP,           KC_L, KC_SCLN) */
/* COMB(down,     KC_DOWN,         KC_DOT, KC_SLSH) */
/* COMB(left,     KC_LEFT,         KC_COMM, KC_DOT, KC_SLSH) */
/* COMB(right,    KC_RIGHT,        KC_DOT, KC_SLSH, KC_RSFT) */

// symbols
COMB(exlm,     KC_EXLM,         KC_Q, KC_S)
COMB(at,       KC_AT,           KC_W, KC_D)
COMB(hash,     KC_HASH,         KC_E, KC_F)
COMB(dlr,      KC_DLR,          KC_R, KC_G)
COMB(perc,     KC_PERC,         KC_T, KC_G)
COMB(perc2,    KC_PERC,         KC_T, KC_G)
COMB(circ,     KC_CIRC,         KC_Y, KC_J)
COMB(ampr,     KC_AMPR,         KC_U, KC_K)
COMB(astr,     KC_ASTR,         KC_I, KC_L)

// signs
COMB(pmns,     KC_PMNS,         KC_I, KC_O)
COMB(unds,     KC_UNDS,         KC_U, KC_I, KC_O)
COMB(eql,      KC_EQL,          KC_U, KC_I)
COMB(plus,     KC_PLUS,         KC_U, KC_O)

// parens and brackets
COMB(lprn,     KC_LPRN,         KC_X, KC_C)
COMB(rprn,     KC_RPRN,         KC_COMM, KC_DOT)
COMB(lbrc,     KC_LBRC,         KC_C, KC_V)
COMB(rbrc,     KC_RBRC,         KC_M, KC_COMM)
COMB(lcbr,     KC_LCBR,         KC_X, KC_V)
COMB(rcbr,     KC_RCBR,         KC_M, KC_DOT)
COMB(lt,       KC_LT,           KC_X, KC_C, KC_V)
COMB(gt,       KC_GT,           KC_M, KC_COMM, KC_DOT)

// os actions
COMB(cut,      C(KC_X),         KC_A, KC_X)
COMB(copy,     C(KC_C),         KC_S, KC_C)
COMB(paste,    C(KC_V),         KC_D, KC_V)
COMB(find,     C(KC_F),         KC_E, KC_F)
COMB(findag,   C(KC_G),         KC_R, KC_G)
COMB(reload,   C(KC_R),         KC_3, KC_R)
COMB(newtab,   C(KC_T),         KC_4, KC_T)

// vim
COMB(ctrl_u,   C(KC_U),         KC_U, KC_P)
COMB(ctrl_w,   C(KC_W),         KC_W, KC_P)
SUBS(viwa,    ":wa\n",          KC_V, KC_W)
SUBS(viqa,    ":qa\n",          KC_V, KC_Q)

